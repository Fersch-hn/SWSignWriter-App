{"version":3,"sources":["webpack:///./src/app/subscribe/subscribe.module.ts","webpack:///./src/app/subscribe/subscribe.page.html","webpack:///./src/app/subscribe/subscribe.page.scss","webpack:///./src/app/subscribe/subscribe.page.ts"],"names":[],"mappings":"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","file":"subscribe-subscribe-module.js","sourcesContent":["import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SubscribePage } from './subscribe.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SubscribePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes),\r\n  ],\r\n  declarations: [SubscribePage]\r\n})\r\nexport class SubscribePageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-toggle>\\r\\n        <ion-button>\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"menu\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-menu-toggle>\\r\\n    </ion-buttons>\\r\\n    <ion-title>{{'Subscribe' | translate}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <p>1 Month FREE</p>\\r\\n      <p>+ $5/month for 11 months</p>\\r\\n      <ion-button (click)=\\\"SubscribeYearly()\\\"> Subscribe Yearly</ion-button>\\r\\n    <hr/>\\r\\n     \\r\\n      <p>$5/month</p>\\r\\n      <ion-button (click)=\\\"SubscribeMonthly()\\\">Subscribe Monthly</ion-button>\\r\\n    </ion-col>\\r\\n    \\r\\n  </ion-row>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YnNjcmliZS9zdWJzY3JpYmUucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { StorageService } from '../storage.service';\r\n\r\n@Component({\r\n  selector: 'app-subscribe',\r\n  templateUrl: './subscribe.page.html',\r\n  styleUrls: ['./subscribe.page.scss'],\r\n})\r\nexport class SubscribePage implements OnInit {\r\n\r\n  constructor(private http: HttpClient,\r\n    private storage: StorageService\r\n     ) { }\r\n  // private serverUrl = 'https://localhost:44309/';\r\n  private serverUrl = 'https://swsignwriterapi.azurewebsites.net/';\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async SubscribeMonthly() {\r\n    const planId = 'plan_GEcB3WZYgKsVER';\r\n    await this.createSession(planId);\r\n  }\r\n\r\n  async SubscribeYearly() {\r\n    const planId = 'plan_GEcEaSP0i9BI5L';\r\n    await this.createSession(planId);\r\n  }\r\n\r\n  private async createSession(planId: string) {\r\n    const profile = await this.storage.GetCurrentUserProfile();\r\n    const subscriptionEndDate = await this.storage.GetSubscriptionEndDate(profile.email);\r\n    const trialStartDate = await this.storage.GetTrialStartDate(profile.email);\r\n    console.log(profile);\r\n    debugger;\r\n    const subscriptionRequest = {\r\n      client: profile,\r\n      planId: planId,\r\n      subscriptionEndDate: subscriptionEndDate,\r\n      trialStartDate: trialStartDate\r\n    };\r\n    this.http.post(this.serverUrl + 'api/stripe/createsession', subscriptionRequest, {\r\n    headers: new HttpHeaders({\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    })\r\n    })\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        const CHECKOUT_SESSION_ID = data;\r\n        const stripe = Stripe('pk_test_l5XnhomUyeQmxzROJWndWDXD00M33eN4jl');\r\n        stripe.redirectToCheckout({\r\n          sessionId: CHECKOUT_SESSION_ID\r\n        }).then(function (result) {\r\n          if (result.error) {\r\n            console.log('There was an error with the checkout.');\r\n          } else {\r\n            console.log('Checkout was a success.');\r\n            console.log(result);\r\n          }\r\n          // If `redirectToCheckout` fails due to a browser or network\r\n          // error, display the localized error message to your customer\r\n          // using `result.error.message`.\r\n        });\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n}\r\n"],"sourceRoot":""}