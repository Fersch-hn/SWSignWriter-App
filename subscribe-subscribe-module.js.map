{"version":3,"sources":["webpack:///./src/app/subscribe/subscribe.module.ts","webpack:///./src/app/subscribe/subscribe.page.html","webpack:///./src/app/subscribe/subscribe.page.scss","webpack:///./src/app/subscribe/subscribe.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAsD;AACb;AACM;AACF;AACU;AAEV;AAEI;AAEjD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;AAYF;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAV/B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,mEAAe;gBACf,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,6DAAa,CAAC;SAC9B,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;AC3BhC,4SAA4S,yBAAyB,yHAAyH,kFAAkF,qBAAqB,wMAAwM,qBAAqB,0f;;;;;;;;;;;ACAlwB,+DAA+D,+I;;;;;;;;;;;;;;;;;;;;;;ACAX;AACX;AACS;AACa;AACX;AACH;AAOjD;IAKE,uBAAoB,IAAgB,EAC1B,OAAuB,EACvB,eAAgC,EAChC,aAA4B,EAC5B,MAAc;QAJJ,SAAI,GAAJ,IAAI,CAAY;QAC1B,YAAO,GAAP,OAAO,CAAgB;QACvB,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QARjB,mBAAc,GAAmB,IAAI,CAAC;QAUrC,cAAS,GAAG,4CAA4C,CAAC;IAD1D,CAAC;IAGF,gCAAQ,GAAd;;;;;4BACkB,qBAAM,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;;wBAApD,OAAO,GAAG,SAA0C;wBAC1D,IAAI,CAAC,OAAO,EAAE;4BACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;yBAClC;wBACoB,qBAAM,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC;;wBAAhE,YAAY,GAAG,SAAiD;wBAChE,UAAU,GAAG,YAAY,IAAI,YAAY,CAAC,OAAO,IAAI,YAAY,CAAC,iBAAiB,CAAE;wBAC3F,IAAI,UAAU,EAAE;4BACd,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;yBAC5B;6BAAM;4BACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;yBAC7B;wBACK,CAAC,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;wBACnC,EAAE,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBAClE,EAAE,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBACjE,EAAE,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBACvE,IAAI,CAAC,mBAAmB,GAAO,EAAE,SAAI,EAAE,SAAI,EAAI,CAAC;;;;;KACjD;IAEK,wCAAgB,GAAtB;;;;;;wBACQ,MAAM,GAAG,qBAAqB,CAAC;wBACrC,qBAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;;wBAAhC,SAAgC,CAAC;;;;;KAClC;IAEK,uCAAe,GAArB;;;;;;wBACQ,MAAM,GAAG,qBAAqB,CAAC;wBACrC,qBAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;;wBAAhC,SAAgC,CAAC;;;;;KAClC;IAEa,qCAAa,GAA3B,UAA4B,MAAc;;;;;4BACxB,qBAAM,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;;wBAApD,OAAO,GAAG,SAA0C;wBAErC,qBAAM,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC;;wBAAhE,YAAY,GAAG,SAAiD;wBAClE,mBAAmB,GAAS,IAAI,IAAI,EAAE,CAAC;wBAC3C,IAAI,YAAY,EAAE;4BAChB,mBAAmB,GAAG,YAAY,CAAC,OAAO,CAAC;yBAC9C;wBACwB,qBAAM,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC;;wBAApE,cAAc,GAAG,SAAmD;wBAC1E,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;wBAEf,OAAO,GAAS,OAAO,CAAC;wBAC9B,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;wBACxB,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC;wBACxC,OAAO,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;wBAElD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,0BAA0B,EAAE,OAAO,EAAE;4BACrE,OAAO,EAAE,IAAI,gEAAW,CAAC;gCACvB,QAAQ,EAAE,kBAAkB;gCAC5B,cAAc,EAAE,kBAAkB;6BACnC,CAAC;yBACD,CAAC;6BACC,SAAS,CAAC,cAAI;4BACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;4BAClB,IAAM,mBAAmB,GAAG,IAAI,CAAC;4BACjC,IAAM,MAAM,GAAG,MAAM,CAAC,4CAA4C,CAAC,CAAC;4BACpE,MAAM,CAAC,kBAAkB,CAAC;gCACxB,SAAS,EAAE,mBAAmB;6BAC/B,CAAC,CAAC,IAAI,CAAC,UAAU,MAAM;gCACtB,IAAI,MAAM,CAAC,KAAK,EAAE;oCAChB,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;iCACtD;qCAAM;oCACL,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;oCACvC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iCACrB;gCACD,4DAA4D;gCAC5D,8DAA8D;gCAC9D,gCAAgC;4BAClC,CAAC,CAAC,CAAC;wBACL,CAAC,EAAE,eAAK;4BACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACrB,CAAC,CAAC,CAAC;;;;;KACN;IACK,qCAAa,GAAnB;;;;;;4BACgB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAChD,MAAM,EAAE,0BAA0B;4BAClC,OAAO,EAAE,qEAAqE;4BAC9E,OAAO,EAAE;gCACP;oCACE,IAAI,EAAE,UAAU;oCAChB,IAAI,EAAE,QAAQ;oCACd,QAAQ,EAAE,WAAW;oCACrB,OAAO,EAAE,UAAC,IAAI;wCACZ,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;oCAChC,CAAC;iCACF,EAAE;oCACD,IAAI,EAAE,OAAO;oCACb,OAAO,EAAE;;;;;oDACP,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;oDACZ,qBAAM,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;;oDAApD,OAAO,GAAG,SAA0C;oDACpD,OAAO,GAAG,EAAE,UAAU,EAC1B,8EAA8E;wDAC9E,KAAK,EAAE,OAAO,CAAC,KAAK,EAAC,CAAC;oDACxB,qBAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,0BAA0B,EAAE,OAAO,EAAE;4DACzE,OAAO,EAAE,IAAI,gEAAW,CAAC;gEACvB,QAAQ,EAAE,kBAAkB;gEAC5B,cAAc,EAAE,kBAAkB;6DACnC,CAAC;yDACD,CAAC,CAAC,SAAS,EAAE;;oDALhB,SAKgB,CAAC;oDACf,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oDACnC,qBAAM,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC;;oDAArE,YAAY,GAAQ,SAAiD;oDACrE,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC;oDACzB,EAAE,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oDAClE,EAAE,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oDACjE,EAAE,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oDACvE,IAAI,CAAC,mBAAmB,GAAM,EAAE,SAAI,EAAE,SAAI,EAAI,CAAC;oDAC/C,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,iBAAiB,CAAC;;;;yCACrD;iCACF;6BACF;yBACF,CAAC;;wBApCM,KAAK,GAAG,SAoCd;wBAEF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACrB;IA7HU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,qGAAoC;;SAErC,CAAC;+EAM0B,+DAAU;YACjB,+DAAc;YACN,8DAAe;YACjB,6DAAa;YACpB,sDAAM;OATb,aAAa,CA8HzB;IAAD,oBAAC;CAAA;AA9HyB","file":"subscribe-subscribe-module.js","sourcesContent":["import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SubscribePage } from './subscribe.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SubscribePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes),\r\n  ],\r\n  declarations: [SubscribePage]\r\n})\r\nexport class SubscribePageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-toggle>\\r\\n        <ion-button>\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"menu\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-menu-toggle>\\r\\n    </ion-buttons>\\r\\n    <ion-title>{{'Subscribe' | translate}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-row>\\r\\n    <ion-col *ngIf=\\\"buttonDisabled; else validuntil\\\">\\r\\n      Your subscription is valid until and will renew on {{subscriptionEndDate}}  <ion-button (click)=\\\"CancelRenewal()\\\"> Cancel Automatic Renewal</ion-button>\\r\\n    </ion-col>\\r\\n    <ng-template #validuntil>\\r\\n      <ion-col>\\r\\n        Your subscription is valid until on {{subscriptionEndDate}}\\r\\n      </ion-col>\\r\\n    </ng-template>\\r\\n    \\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <p>1 Month FREE</p>\\r\\n      <p>+ $5/month for 11 months</p>\\r\\n      <ion-button [disabled]=\\\"buttonDisabled\\\" (click)=\\\"SubscribeYearly()\\\"> Subscribe Yearly</ion-button>\\r\\n    <hr/>\\r\\n     \\r\\n      <p>$5/month</p>\\r\\n      <ion-button  [disabled]=\\\"buttonDisabled\\\" (click)=\\\"SubscribeMonthly()\\\">Subscribe Monthly</ion-button>\\r\\n    </ion-col>\\r\\n    \\r\\n  </ion-row>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YnNjcmliZS9zdWJzY3JpYmUucGFnZS5zY3NzIn0= */\"","import { StripeService } from './../stripe.service';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { StorageService } from '../storage.service';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-subscribe',\r\n  templateUrl: './subscribe.page.html',\r\n  styleUrls: ['./subscribe.page.scss'],\r\n})\r\nexport class SubscribePage implements OnInit {\r\n  public buttonDisabled: boolean | null = null;\r\n  public subscriptionEndDate: string;\r\n  public autoRenewal: boolean;\r\n\r\n  constructor(private http: HttpClient,\r\n    private storage: StorageService,\r\n    private alertController: AlertController,\r\n    private stripeservice: StripeService,\r\n    private router: Router\r\n     ) { }\r\n  private serverUrl = 'https://swsignwriterapi.azurewebsites.net/';\r\n\r\n  async ngOnInit() {\r\n    const profile = await this.storage.GetCurrentUserProfile();\r\n    if (!profile) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    const subscription = await this.storage.GetSubscription(profile.email);\r\n    const subscribed = subscription && subscription.endDate && subscription.cancelatperiodend ;\r\n    if (subscribed) {\r\n      this.buttonDisabled = true;\r\n    } else {\r\n      this.buttonDisabled = false;\r\n    }\r\n    const d = new Date(subscription.endDate);\r\n    const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);\r\n    const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);\r\n    const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\r\n    this.subscriptionEndDate =  `${da}-${mo}-${ye}`;\r\n  }\r\n\r\n  async SubscribeMonthly() {\r\n    const planId = 'plan_GEcB3WZYgKsVER';\r\n    await this.createSession(planId);\r\n  }\r\n\r\n  async SubscribeYearly() {\r\n    const planId = 'plan_GEcEaSP0i9BI5L';\r\n    await this.createSession(planId);\r\n  }\r\n\r\n  private async createSession(planId: string) {\r\n    const profile = await this.storage.GetCurrentUserProfile();\r\n\r\n    const subscription = await this.storage.GetSubscription(profile.email);\r\n    let subscriptionEndDate: Date = new Date();\r\n    if (subscription) {\r\n      subscriptionEndDate = subscription.endDate;\r\n  }\r\n    const trialStartDate = await this.storage.GetTrialStartDate(profile.email);\r\n    console.log(profile);\r\n\r\n    const request: any  = profile;\r\n    request.planId = planId;\r\n    request.trialStartDate = trialStartDate;\r\n    request.subscriptionEndDate = subscriptionEndDate;\r\n\r\n    this.http.post(this.serverUrl + 'api/stripe/createsession', request, {\r\n    headers: new HttpHeaders({\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    })\r\n    })\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        const CHECKOUT_SESSION_ID = data;\r\n        const stripe = Stripe('pk_test_l5XnhomUyeQmxzROJWndWDXD00M33eN4jl');\r\n        stripe.redirectToCheckout({\r\n          sessionId: CHECKOUT_SESSION_ID\r\n        }).then(function (result) {\r\n          if (result.error) {\r\n            console.log('There was an error with the checkout.');\r\n          } else {\r\n            console.log('Checkout was a success.');\r\n            console.log(result);\r\n          }\r\n          // If `redirectToCheckout` fails due to a browser or network\r\n          // error, display the localized error message to your customer\r\n          // using `result.error.message`.\r\n        });\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  async CancelRenewal() {\r\n    const alert = await this.alertController.create({\r\n    header: 'Cancel automatic renewal',\r\n    message: 'Are you <strong>sure</strong> you want to remove automatic renewal?',\r\n    buttons: [\r\n      {\r\n        text: 'Disagree',\r\n        role: 'cancel',\r\n        cssClass: 'secondary',\r\n        handler: (blah) => {\r\n          console.log('Confirm Cancel');\r\n        }\r\n      }, {\r\n        text: 'Agree',\r\n        handler: async () => {\r\n          console.log('Confirm Okay');\r\n          const profile = await this.storage.GetCurrentUserProfile();\r\n          const request = { privatekey:\r\n            '**GSew10o0uJiAg4qpTAvQ$KEMaCjC6P7@su2Dd1C9#a8Y$VISWXzYogPhYk&N6p5&cGb1k@nGFX',\r\n            email: profile.email};\r\n          await this.http.post(this.serverUrl + 'api/stripe/cancelrenewal', request, {\r\n            headers: new HttpHeaders({\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n            })\r\n            }).toPromise();\r\n            this.stripeservice.GetandSaveSubscriptionData(profile.email);\r\n            const subscription: any = await this.storage.GetSubscription(profile.email);\r\n            const d = subscription.endDate;\r\n            const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);\r\n            const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);\r\n            const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\r\n            this.subscriptionEndDate = `${da}-${mo}-${ye}`;\r\n            this.autoRenewal = subscription.CancelAtPeriodEnd;\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  await alert.present();\r\n  }\r\n}\r\n"],"sourceRoot":""}