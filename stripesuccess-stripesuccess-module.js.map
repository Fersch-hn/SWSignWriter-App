{"version":3,"sources":["webpack:///./src/app/stripesuccess/stripesuccess.module.ts","webpack:///./src/app/stripesuccess/stripesuccess.page.html","webpack:///./src/app/stripesuccess/stripesuccess.page.scss","webpack:///./src/app/stripesuccess/stripesuccess.page.ts"],"names":[],"mappings":"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","file":"stripesuccess-stripesuccess-module.js","sourcesContent":["import { TranslateModule } from '@ngx-translate/core';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StripesuccessPage } from './stripesuccess.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StripesuccessPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [StripesuccessPage]\n})\nexport class StripesuccessPageModule {}\n","module.exports = \".<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-toggle>\\n        <ion-button>\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"menu\\\"></ion-icon>\\n        </ion-button>\\n      </ion-menu-toggle>\\n    </ion-buttons>\\n    <ion-title>{{'Stripe Success' | translate}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  Your purchase was a success.\\n\\n  Your subscription will renew on {{subscriptionEndDate}}\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0cmlwZXN1Y2Nlc3Mvc3RyaXBlc3VjY2Vzcy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { StorageService } from '../storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-stripesuccess',\r\n  templateUrl: './stripesuccess.page.html',\r\n  styleUrls: ['./stripesuccess.page.scss'],\r\n})\r\nexport class StripesuccessPage implements OnInit {\r\n  private serverUrl = 'https://swsignwriterapi.azurewebsites.net/';\r\n  public subscriptionEndDate: string;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private storage: StorageService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n    ) {}\r\n\r\n\r\n  async ngOnInit() {\r\n    const profile = await this.storage.GetCurrentUserProfile();\r\n    if (!profile) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    await this.getSubscriptionInfo();\r\n  }\r\n\r\n  async getSubscriptionInfo() {\r\n    const profile = await this.storage.GetCurrentUserProfile();\r\n    this.route.queryParamMap\r\n      .subscribe((params: any) => {\r\n      const sessionid = params.params['session_id'];\r\n      const subscriptionData = {\r\n        privatekey: '**GSew10o0uJiAg4qpTAvQ$KEMaCjC6P7@su2Dd1C9#a8Y$VISWXzYogPhYk&N6p5&cGb1k@nGFX',\r\n        email: profile.email,\r\n        sessionId: sessionid\r\n      };\r\n\r\n      this.http.post(this.serverUrl + 'api/stripe/session', subscriptionData, {\r\n      headers: new HttpHeaders({\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      })\r\n    }).subscribe((data: any) => {\r\n      console.log(data);\r\n      this.storage.SaveSubscriptionEndDate(data.email, data.SubscriptionEndDate, data.CancelAtPeriodEnd);\r\n\r\n      const d = new Date(data.SubscriptionEndDate);\r\n      const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);\r\n      const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);\r\n      const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\r\n      this.subscriptionEndDate =  `${da}-${mo}-${ye}`;\r\n    });\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}