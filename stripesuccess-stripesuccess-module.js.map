{"version":3,"sources":["webpack:///./src/app/stripesuccess/stripesuccess.module.ts","webpack:///./src/app/stripesuccess/stripesuccess.page.html","webpack:///./src/app/stripesuccess/stripesuccess.page.scss","webpack:///./src/app/stripesuccess/stripesuccess.page.ts"],"names":[],"mappings":"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","file":"stripesuccess-stripesuccess-module.js","sourcesContent":["import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { StripesuccessPage } from './stripesuccess.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StripesuccessPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [StripesuccessPage]\r\n})\r\nexport class StripesuccessPageModule {}\r\n","module.exports = \".<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-toggle>\\r\\n        <ion-button>\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"menu\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-menu-toggle>\\r\\n    </ion-buttons>\\r\\n    <ion-title>{{'Stripe Success' | translate}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  Your purchase was a success.\\r\\n\\r\\n  Your subscription will renew on {{subscriptionEndDate}}\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0cmlwZXN1Y2Nlc3Mvc3RyaXBlc3VjY2Vzcy5wYWdlLnNjc3MifQ== */\"","import { StripeService } from './../stripe.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { StorageService } from '../storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-stripesuccess',\r\n  templateUrl: './stripesuccess.page.html',\r\n  styleUrls: ['./stripesuccess.page.scss']\r\n})\r\nexport class StripesuccessPage implements OnInit {\r\n\r\n  public subscriptionEndDate: string;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private storage: StorageService,\r\n    private route: ActivatedRoute,\r\n    private stripeservice: StripeService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    const profile = await this.storage.GetCurrentUserProfile();\r\n    if (!profile || profile === null) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    await this.getSubscriptionInfo();\r\n  }\r\n\r\n  async getSubscriptionInfo() {\r\n    const profile = await this.storage.GetCurrentUserProfile();\r\n    if (profile && profile !== null) {\r\n      this.route.queryParamMap.subscribe(async (params: any) => {\r\n        const sessionid = params.params['session_id'];\r\n\r\n        await this.stripeservice.GetandSaveStripeSubscriptionData(profile.email, sessionid);\r\n        const subscription: any = await this.storage.GetSubscription(profile.email);\r\n        const d = new Date(subscription.endDate);\r\n        const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);\r\n        const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);\r\n        const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\r\n        this.subscriptionEndDate = `${da}-${mo}-${ye}`;\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}