{"version":3,"sources":["webpack:///./src/app/stripesuccess/stripesuccess.module.ts","webpack:///./src/app/stripesuccess/stripesuccess.page.html","webpack:///./src/app/stripesuccess/stripesuccess.page.scss","webpack:///./src/app/stripesuccess/stripesuccess.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAsD;AACb;AACM;AACF;AACU;AAEV;AAEY;AAEzD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAiB;KAC7B;CACF,CAAC;AAYF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QAVnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,mEAAe;gBACf,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;AC3BpC,2RAA2R,8BAA8B,oIAAoI,qBAAqB,mB;;;;;;;;;;;ACAld,+DAA+D,2J;;;;;;;;;;;;;;;;;;;;;ACAX;AACF;AACa;AACX;AACK;AAOzD;IAGE,2BACU,IAAgB,EAChB,OAAuB,EACvB,KAAqB,EACrB,aAA4B,EAC5B,MAAc;QAJd,SAAI,GAAJ,IAAI,CAAY;QAChB,YAAO,GAAP,OAAO,CAAgB;QACvB,UAAK,GAAL,KAAK,CAAgB;QACrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEC,oCAAQ,GAAd;;;;;4BACkB,qBAAM,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;;wBAApD,OAAO,GAAG,SAA0C;wBAC1D,IAAI,CAAC,OAAO,EAAE;4BACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;yBAClC;wBACD,qBAAM,IAAI,CAAC,mBAAmB,EAAE;;wBAAhC,SAAgC,CAAC;;;;;KAClC;IAEK,+CAAmB,GAAzB;;;;;;4BACkB,qBAAM,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;;wBAApD,OAAO,GAAG,SAA0C;wBAC1D,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,MAAW;4BAC7C,IAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;4BAE9C,IAAM,IAAI,GAAQ,KAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;4BAC1F,IAAM,CAAC,GAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;4BAChD,IAAM,EAAE,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;4BACxE,IAAM,EAAE,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;4BACvE,IAAM,EAAE,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;4BACvE,KAAI,CAAC,mBAAmB,GAAM,EAAE,SAAI,EAAE,SAAI,EAAI,CAAC;wBACjD,CAAC,CAAC,CAAC;;;;;KACJ;IA/BU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,iHAAwC;;SAEzC,CAAC;+EAKgB,+DAAU;YACP,+DAAc;YAChB,8DAAc;YACN,6DAAa;YACpB,sDAAM;OARb,iBAAiB,CAgC7B;IAAD,wBAAC;CAAA;AAhC6B","file":"stripesuccess-stripesuccess-module.js","sourcesContent":["import { TranslateModule } from '@ngx-translate/core';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StripesuccessPage } from './stripesuccess.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StripesuccessPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [StripesuccessPage]\n})\nexport class StripesuccessPageModule {}\n","module.exports = \".<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-toggle>\\n        <ion-button>\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"menu\\\"></ion-icon>\\n        </ion-button>\\n      </ion-menu-toggle>\\n    </ion-buttons>\\n    <ion-title>{{'Stripe Success' | translate}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  Your purchase was a success.\\n\\n  Your subscription will renew on {{subscriptionEndDate}}\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0cmlwZXN1Y2Nlc3Mvc3RyaXBlc3VjY2Vzcy5wYWdlLnNjc3MifQ== */\"","import { StripeService } from './../stripe.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { StorageService } from '../storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-stripesuccess',\r\n  templateUrl: './stripesuccess.page.html',\r\n  styleUrls: ['./stripesuccess.page.scss']\r\n})\r\nexport class StripesuccessPage implements OnInit {\r\n\r\n  public subscriptionEndDate: string;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private storage: StorageService,\r\n    private route: ActivatedRoute,\r\n    private stripeservice: StripeService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    const profile = await this.storage.GetCurrentUserProfile();\r\n    if (!profile) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    await this.getSubscriptionInfo();\r\n  }\r\n\r\n  async getSubscriptionInfo() {\r\n    const profile = await this.storage.GetCurrentUserProfile();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      const sessionid = params.params['session_id'];\r\n\r\n      const data: any = this.stripeservice.GetandSaveSubscriptionData(profile.email, sessionid);\r\n      const d =  Date.parse(data.SubscriptionEndDate);\r\n      const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);\r\n      const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);\r\n      const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\r\n      this.subscriptionEndDate = `${da}-${mo}-${ye}`;\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}